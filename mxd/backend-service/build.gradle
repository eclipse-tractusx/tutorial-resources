plugins {
    id 'java'
    id 'com.bmuschko.docker-remote-api' version '9.3.4'
}
import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
group 'com.eclipse.mxd'
version '0.0.1'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
    jerseyVersion = '3.0.3'
    jettyVersion = '11.0.7'
    hibernateVersion = '6.0.2.Final'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    duplicatesStrategy = 'INCLUDE'
    manifest {
        attributes(
                'Main-Class': 'com.eclipse.mxd.Main'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    implementation "jakarta.enterprise:jakarta.enterprise.cdi-api:3.0.0"
    implementation "jakarta.ws.rs:jakarta.ws.rs-api:3.0.0"
    implementation "jakarta.servlet:jakarta.servlet-api:5.0.0"
    implementation "org.hibernate:hibernate-core:${hibernateVersion}"

    implementation "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
    implementation "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
// https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.0'

    implementation 'org.hibernate.validator:hibernate-validator:7.0.2.Final' // Use the latest version available
    implementation "org.glassfish.jersey.containers:jersey-container-servlet:${jerseyVersion}"
    implementation "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}"
    implementation "org.glassfish.jersey.core:jersey-common:${jerseyVersion}"
    implementation "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation("org.glassfish.jersey.inject:jersey-hk2:3.0.3") {
        exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
    }

    implementation 'org.glassfish.jersey.containers:jersey-container-servlet:2.25'
    implementation 'org.glassfish.jersey.core:jersey-server:2.25'
    implementation 'org.glassfish.jersey.core:jersey-client:2.25'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.25'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.1' // Use the latest version available
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.1' // Use the latest version available



    // Additional Jetty dependencies if needed
    implementation "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-util:${jettyVersion}"
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform()
}

tasks.register('dockerize', DockerBuildImage) {
    images.add('mxd-backend-service-'+version+':latest')
}
