{
	"info": {
		"_postman_id": "80292c73-9759-4fb7-8679-11697d408b10",
		"name": "MXD Service APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "647585"
	},
	"item": [
		{
			"name": "Example Sequence",
			"item": [
				{
					"name": "get cached catalog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the policy id of \"asset-1\" and save it as an environment variable",
									"const asset_1 = pm.response.json()[1][\"dcat:dataset\"].find((asset) => asset[\"@id\"] == \"asset-1\")",
									"offer_id=asset_1[\"odrl:hasPolicy\"][\"@id\"];",
									"pm.collectionVariables.set(\"POLICY_ID_ASSET_1\", offer_id);  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": [\n        \"https://w3id.org/edc/connector/management/v0.0.1\"\n    ],\n    \"@type\": \"QuerySpec\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/bob/fc/catalog/v1alpha/catalog/query",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"bob",
								"fc",
								"catalog",
								"v1alpha",
								"catalog",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "initiate negotiation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": [\n        \"https://w3id.org/edc/connector/management/v0.0.1\",\n        {\n            \"tx\": \"https://w3id.org/tractusx/v0.0.1/ns/\"\n        },\n        {\n            \"tx-auth\": \"https://w3id.org/tractusx/auth/\"\n        },\n        {\n            \"cx-policy\": \"https://w3id.org/catenax/policy/\"\n        }\n    ],\n    \"@type\": \"ContractRequest\",\n    \"counterPartyAddress\": \"http://alice-controlplane:8084/api/v1/dsp\",\n    \"counterPartyId\": \"BPNL000000000001\",\n    \"protocol\": \"dataspace-protocol-http\",\n    \"policy\": {\n        \"@id\": \"{{POLICY_ID_ASSET_1}}\",\n        \"@type\": \"Offer\",\n        \"assigner\": \"BPNL000000000001\",\n        \"odrl:permission\": {\n            \"odrl:action\": {\n                \"@id\": \"odrl:use\"\n            },\n            \"odrl:constraint\": {\n                \"odrl:leftOperand\": {\n                    \"@id\": \"cx-policy:Membership\"\n                },\n                \"odrl:operator\": {\n                    \"@id\": \"odrl:eq\"\n                },\n                \"odrl:rightOperand\": \"active\"\n            }\n        },\n        \"odrl:prohibition\": [],\n        \"odrl:obligation\": [],\n        \"target\": \"asset-1\"\n    },\n    \"callbackAddresses\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/bob/management/v3/contractnegotiations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"bob",
								"management",
								"v3",
								"contractnegotiations"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all negotiations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the contact agreement id and save it as an environment variable",
									"if(pm.response.code < 300 && pm.response.code >= 200){",
									"  //using the first contract agreement id found",
									"  const contractAgreementId = pm.response.json()[0][\"contractAgreementId\"];",
									"  pm.collectionVariables.set(\"CONTRACT_AGREEMENT_ID\", contractAgreementId);",
									"}",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"@context\": [\n        \"https://w3id.org/edc/connector/management/v0.0.1\"\n    ],\n    \"@type\": \"QuerySpec\"\n}"
						},
						"url": {
							"raw": "http://localhost/bob/management/v3/contractnegotiations/request",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"bob",
								"management",
								"v3",
								"contractnegotiations",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "start transfer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "password",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": [\n        { \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\" },\n        {\n            \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n        },\n        {\n            \"tx\": \"https://w3id.org/tractusx/v0.0.1/ns/\"\n        },\n        {\n            \"tx-auth\": \"https://w3id.org/tractusx/auth/\"\n        },\n        {\n            \"cx-policy\": \"https://w3id.org/catenax/policy/\"\n        }\n    ],\n    \"@type\": \"TransferRequest\",\n    \"assetId\": \"asset-1\",\n    \"counterPartyAddress\": \"http://alice-controlplane:8084/api/v1/dsp\",\n    \"counterPartyId\": \"BPNL000000000001\",\n    \"contractId\": \"{{CONTRACT_AGREEMENT_ID}}\",\n    \"dataDestination\": {\n        \"type\": \"HttpProxy\"\n    },\n    \"protocol\": \"dataspace-protocol-http\",\n    \"transferType\": \"HttpData-PULL\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/bob/management/v3/transferprocesses",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"bob",
								"management",
								"v3",
								"transferprocesses"
							]
						}
					},
					"response": []
				},
				{
					"name": "get transfers",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": [\n        \"https://w3id.org/edc/connector/management/v0.0.1\"\n    ],\n    \"@type\": \"QuerySpec\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/bob/management/v3/transferprocesses/request",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"bob",
								"management",
								"v3",
								"transferprocesses",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "get EDRs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the transfer process id of \"asset-1\" and save it as an environment variable",
									"if(pm.response.code < 300 && pm.response.code >= 200){",
									"  const transferProcessId = pm.response.json()[0][\"transferProcessId\"];",
									"  pm.collectionVariables.set(\"TRANSFER_PROCESS_ID\", transferProcessId);",
									"}",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": [\n        \"https://w3id.org/edc/connector/management/v0.0.1\"\n    ],\n    \"@type\": \"QuerySpec\"\n}"
						},
						"url": {
							"raw": "http://localhost/bob/management/v3/edrs/request",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"bob",
								"management",
								"v3",
								"edrs",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get EDR DataAddress for TransferId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if(!pm.collectionVariables.has(\"TRANSFER_PROCESS_ID\")){",
									"    throw new Error('Transfer Process ID is not yet available, please execute request \"Get Transfer Processes\" first!');",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the authorization token and save it as an environment variable",
									"if(pm.response.code < 300 && pm.response.code >= 200){",
									"  //using the first authorization token found",
									"  const authorization = pm.response.json()[\"authorization\"];",
									"  pm.collectionVariables.set(\"AUTHORIZATION\", authorization);",
									"",
									"  pm.collectionVariables.set(\"REFRESH_TOKEN\", pm.response.json()[\"tx-auth:refreshToken\"])",
									"  pm.collectionVariables.set(\"REFRESH_AUD\", pm.response.json()[\"tx-auth:refreshAudience\"])",
									"  pm.collectionVariables.set(\"REFRESH_ENDPOINT\", pm.response.json()[\"tx-auth:refreshEndpoint\"])",
									"}",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/bob/management/v3/edrs/{{TRANSFER_PROCESS_ID}}/dataaddress",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"bob",
								"management",
								"v3",
								"edrs",
								"{{TRANSFER_PROCESS_ID}}",
								"dataaddress"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download Data from Public API Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if(!pm.collectionVariables.has(\"AUTHORIZATION\")){",
									"    throw new Error(' The authorization token is not yet available, please execute request \"Get EDR DataAddress for TransferId\" first!');",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AUTHORIZATION}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/alice/api/public",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"alice",
								"api",
								"public"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the authorization token and save it as an environment variable",
									"if(pm.response.code < 300 && pm.response.code >= 200){",
									"  //using the first authorization token found",
									"  const authorization = pm.response.json()[\"authorization\"];",
									"  pm.collectionVariables.set(\"AUTHORIZATION\", authorization);",
									"",
									"  pm.collectionVariables.set(\"REFRESH_TOKEN\", pm.response.json()[\"tx-auth:refreshToken\"])",
									"  pm.collectionVariables.set(\"REFRESH_AUD\", pm.response.json()[\"tx-auth:refreshAudience\"])",
									"  pm.collectionVariables.set(\"REFRESH_ENDPOINT\", pm.response.json()[\"tx-auth:refreshEndpoint\"])",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/bob/management/v3/edrs/{{TRANSFER_PROCESS_ID}}/refresh?auto_refresh=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"bob",
								"management",
								"v3",
								"edrs",
								"{{TRANSFER_PROCESS_ID}}",
								"refresh"
							],
							"query": [
								{
									"key": "auto_refresh",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Contains requests that are needed to negotiate a contract, establish a transfer process and ultimately transfer data between a provider and a consumer.\n\nAll URLs are designed to work with the MXD K8S deployment."
		},
		{
			"name": "Identity API",
			"item": [
				{
					"name": "Participant Context Mgmt API",
					"item": [
						{
							"name": "Get Participant By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all participants",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Participant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"roles\":[],\n    \"serviceEndpoints\":[],\n    \"active\": true,\n    \"participantId\": \"new-participant-id\",\n    \"did\": \"did:web:new-participant-id\",\n    \"key\":{\n        \"keyId\": \"key-1\",\n        \"privateKeyAlias\": \"new-participant-id-alias\",\n        \"keyGeneratorParams\":{\n            \"algorithm\": \"EdDSA\",\n            \"curve\": \"Ed25519\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Participant (existing key)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"roles\":[],\n    \"serviceEndpoints\":[],\n    \"active\": true,\n    \"participantId\": \"new-participant-id\",\n    \"did\": \"did:web:new-participant-id\",\n    \"key\":{\n        \"keyId\": \"key-1\",\n        \"privateKeyAlias\": \"new-participant-id-alias\",\n        \"publicKeyPem\":\"-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE1l0Lof0a1yBc8KXhesAnoBvxZw5r\\noYnkAXuqCYfNK3ex+hMWFuiXGUxHlzShAehR6wvwzV23bbC0tcFcVgW//A==\\n-----END PUBLIC KEY-----\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"role1\", \"role2\", \"admin\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/roles",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Regenerate Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/token",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate Participant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"roles\":[],\n    \"serviceEndpoints\":[],\n    \"isActive\": true,\n    \"participantId\": \"foobar\",\n    \"did\": \"did:web:foobar\",\n    \"key\":{\n        \"keyId\": \"key1\",\n        \"privateKeyAlias\": \"foobar-alias\",\n        \"keyGeneratorParams\":{\n            \"algorithm\": \"EC\",\n            \"curve\": \"secp256r1\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/state?isActive=true",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"state"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate Participant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"roles\":[],\n    \"serviceEndpoints\":[],\n    \"isActive\": true,\n    \"participantId\": \"foobar\",\n    \"did\": \"did:web:foobar\",\n    \"key\":{\n        \"keyId\": \"key1\",\n        \"privateKeyAlias\": \"foobar-alias\",\n        \"keyGeneratorParams\":{\n            \"algorithm\": \"EC\",\n            \"curve\": \"secp256r1\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/state?isActive=false",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"state"
									],
									"query": [
										{
											"key": "isActive",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Participant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"roles\":[],\n    \"serviceEndpoints\":[],\n    \"isActive\": true,\n    \"participantId\": \"foobar\",\n    \"did\": \"did:web:foobar\",\n    \"key\":{\n        \"keyId\": \"key1\",\n        \"privateKeyAlias\": \"foobar-alias\",\n        \"keyGeneratorParams\":{\n            \"algorithm\": \"EC\",\n            \"curve\": \"secp256r1\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "KeyPair Resources Mgmt API",
					"item": [
						{
							"name": "Get KeyPair for Participant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/keypairs",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"keypairs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all KeyPairs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/keypairs",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"keypairs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add KeyPair",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status is OK or conflict\", function() {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 204, 409])",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"keyId\": \"key6\",\n    \"privateKeyAlias\": \"new-foobar-alias5\",\n    \"keyGeneratorParams\": {\n        \"algorithm\": \"EdDSA\",\n        \"curve\": \"Ed25519\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/keypairs",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"keypairs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Rotate key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"keyId\": \"key2\",\n    \"privateKeyAlias\": \"new-foobar-alias\",\n    \"keyGeneratorParams\": {\n        \"algorithm\": \"EC\",\n        \"curve\": \"secp256r1\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/keypairs/key1/rotate",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"keypairs",
										"key1",
										"rotate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/keypairs/key2/revoke",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"keypairs",
										"key2",
										"revoke"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "DID Document Mgmt API",
					"item": [
						{
							"name": "Query DIDs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/dids/query",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"dids",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All DID Documents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/dids",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"dids"
									]
								}
							},
							"response": []
						},
						{
							"name": "Publish DID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"did\": \"did:web:BPN0000001\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/dids/publish",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"dids",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add endpoint",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"some-other-id\",\n    \"type\": \"CredentialService\",\n    \"serviceEndpoint\": \"https://foobar.myconnector.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/dids/{{DID}}/endpoints",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"dids",
										"{{DID}}",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Un-Publish DID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"did\": \"did:web:consumer-identityhub%3A7083:connector1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/dids/unpublish",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"dids",
										"unpublish"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete DID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"did\": \"did:web:super-user\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/dids",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"dids"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get DID Document state",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"did\": \"did:web:super-user\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/dids/state",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"dids",
										"state"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is OK\", function() {",
									"  pm.expect(pm.response.code).to.be.oneOf([200, 204])",
									"})"
								]
							}
						}
					]
				},
				{
					"name": "VerifiableCredential Mgmt API",
					"item": [
						{
							"name": "Get Credential By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status is OK\", function() {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 204])",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID}}/credentials/CREDENTIAL-ID",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID}}",
										"credentials",
										"CREDENTIAL-ID"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status is OK\", function() {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 204])",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost/bob-ih/cs/api/identity/v1alpha/credentials",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"bob-ih",
										"cs",
										"api",
										"identity",
										"v1alpha",
										"credentials"
									]
								}
							},
							"response": []
						},
						{
							"name": "Make Credential Request Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.response.code < 300 && pm.response.code >= 200){",
											"    const requestId = pm.response.text()",
											"    pm.collectionVariables.set(\"REQUEST_ID\", requestId);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerDid\": \"{{ISSUER_DID}}\",\n    \"holderPid\": \"credential-request-1\",\n    \"credentials\": [{\n        \"format\": \"VC1_0_JWT\",\n        \"credentialType\": \"DemoCredential\"\n    }]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID_BASE64}}/credentials/request",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID_BASE64}}",
										"credentials",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Credential Reqeusts Copy",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{IH_URL}}/api/identity/v1alpha/participants/{{PARTICIPANT_ID_BASE64}}/credentials/request/{{REQUEST_ID}}",
									"host": [
										"{{IH_URL}}"
									],
									"path": [
										"api",
										"identity",
										"v1alpha",
										"participants",
										"{{PARTICIPANT_ID_BASE64}}",
										"credentials",
										"request",
										"{{REQUEST_ID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "Contains requests against IdentityHub's Identity API. Requests are in no particular order, and are designed to be executed against the MXD K8S deployment",
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "value",
						"value": "{{IH_API_TOKEN}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "X-Api-Key",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status is OK or conflict\", function() {",
							"  pm.expect(pm.response.code).to.be.oneOf([200,201, 204, 409])",
							"})"
						]
					}
				}
			]
		},
		{
			"name": "IssuerService Admin API",
			"item": [
				{
					"name": "Attestations",
					"item": [
						{
							"name": "get Attestations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/attestations?participantId=<string>",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"attestations"
									],
									"query": [
										{
											"key": "participantId",
											"value": "<string>"
										}
									]
								},
								"description": "Get all attestations for a given participant."
							},
							"response": [
								{
									"name": "A list of attestation metadata.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"attestationType\": \"<string>\",\n    \"configuration\": {\n      \"aliquip2\": {},\n      \"pariatur_b3\": {},\n      \"essebab\": {}\n    },\n    \"id\": \"<string>\"\n  },\n  {\n    \"attestationType\": \"<string>\",\n    \"configuration\": {\n      \"sint_9f6\": {}\n    },\n    \"id\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "create Attestation",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attestationType\": \"database\",\n  \"configuration\": {\n    \"commodof4\": {},\n    \"laborisb27\": {}\n  },\n  \"id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/attestations",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"attestations"
									]
								},
								"description": "Creates an attestation definition in the runtime."
							},
							"response": [
								{
									"name": "The attestation definition was added successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestationType\": \"<string>\",\n  \"configuration\": {\n    \"commodof4\": {},\n    \"laborisb27\": {}\n  },\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestationType\": \"<string>\",\n  \"configuration\": {\n    \"commodof4\": {},\n    \"laborisb27\": {}\n  },\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestationType\": \"<string>\",\n  \"configuration\": {\n    \"commodof4\": {},\n    \"laborisb27\": {}\n  },\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The participant was not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestationType\": \"<string>\",\n  \"configuration\": {\n    \"commodof4\": {},\n    \"laborisb27\": {}\n  },\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Can't add the participant, because a object with the same ID already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestationType\": \"<string>\",\n  \"configuration\": {\n    \"commodof4\": {},\n    \"laborisb27\": {}\n  },\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "query Attestations",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/attestations/query",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"attestations",
										"query"
									]
								},
								"description": "Query attestation definitions"
							},
							"response": [
								{
									"name": "A list of attestation metadata.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												"query"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"attestationType\": \"<string>\",\n    \"configuration\": {\n      \"aliquip2\": {},\n      \"pariatur_b3\": {},\n      \"essebab\": {}\n    },\n    \"id\": \"<string>\"\n  },\n  {\n    \"attestationType\": \"<string>\",\n    \"configuration\": {\n      \"sint_9f6\": {}\n    },\n    \"id\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												"query"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												"query"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "link Attestation",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/attestations/:attestationDefinitionId/link?participantId=<string>",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"attestations",
										":attestationDefinitionId",
										"link"
									],
									"query": [
										{
											"key": "participantId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "attestationDefinitionId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Links an attestation definition to a participant. This enables a certain attestation definition for a participant."
							},
							"response": [
								{
									"name": "The attestation was linked successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/:attestationDefinitionId/link?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												":attestationDefinitionId",
												"link"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "attestationDefinitionId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/:attestationDefinitionId/link?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												":attestationDefinitionId",
												"link"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "attestationDefinitionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/:attestationDefinitionId/link?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												":attestationDefinitionId",
												"link"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "attestationDefinitionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The participant was not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/:attestationDefinitionId/link?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												":attestationDefinitionId",
												"link"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "attestationDefinitionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Can't add the participant, because a object with the same ID already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/:attestationDefinitionId/link?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												":attestationDefinitionId",
												"link"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "attestationDefinitionId"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "unlink Attestation",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/attestations/:attestationDefinitionId/unlink?participantId=<string>",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"attestations",
										":attestationDefinitionId",
										"unlink"
									],
									"query": [
										{
											"key": "participantId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "attestationDefinitionId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Un-Links an attestation definition to a participant. This disables a certain attestation definition for a participant."
							},
							"response": [
								{
									"name": "The attestation was unlinked successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/:attestationDefinitionId/unlink?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												":attestationDefinitionId",
												"unlink"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "attestationDefinitionId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/:attestationDefinitionId/unlink?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												":attestationDefinitionId",
												"unlink"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "attestationDefinitionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/:attestationDefinitionId/unlink?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												":attestationDefinitionId",
												"unlink"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "attestationDefinitionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The participant was not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/:attestationDefinitionId/unlink?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												":attestationDefinitionId",
												"unlink"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "attestationDefinitionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Can't add the participant, because a object with the same ID already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/attestations/:attestationDefinitionId/unlink?participantId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"attestations",
												":attestationDefinitionId",
												"unlink"
											],
											"query": [
												{
													"key": "participantId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "attestationDefinitionId"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "CredentialDefinitions",
					"item": [
						{
							"name": "create Credential Definition",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credentialType\": \"<string>\",\n  \"dataModel\": \"V_2_0\",\n  \"id\": \"<string>\",\n  \"jsonSchema\": \"<string>\",\n  \"jsonSchemaUrl\": \"<string>\",\n  \"mappings\": [\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"configuration\": {\n        \"addca\": {}\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"configuration\": {\n        \"incididunt_a1f\": {}\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"validity\": \"<long>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/credentialdefinitions",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"credentialdefinitions"
									]
								},
								"description": "Adds a new credential definition."
							},
							"response": [
								{
									"name": "The credential definition was created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credentialType\": \"<string>\",\n  \"dataModel\": \"V_2_0\",\n  \"id\": \"<string>\",\n  \"jsonSchema\": \"<string>\",\n  \"jsonSchemaUrl\": \"<string>\",\n  \"mappings\": [\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"configuration\": {\n        \"addca\": {}\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"configuration\": {\n        \"incididunt_a1f\": {}\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"validity\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credentialType\": \"<string>\",\n  \"dataModel\": \"V_2_0\",\n  \"id\": \"<string>\",\n  \"jsonSchema\": \"<string>\",\n  \"jsonSchemaUrl\": \"<string>\",\n  \"mappings\": [\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"configuration\": {\n        \"addca\": {}\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"configuration\": {\n        \"incididunt_a1f\": {}\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"validity\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credentialType\": \"<string>\",\n  \"dataModel\": \"V_2_0\",\n  \"id\": \"<string>\",\n  \"jsonSchema\": \"<string>\",\n  \"jsonSchemaUrl\": \"<string>\",\n  \"mappings\": [\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"configuration\": {\n        \"addca\": {}\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"configuration\": {\n        \"incididunt_a1f\": {}\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"validity\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Can't create the credential definition, because a object with the same ID already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credentialType\": \"<string>\",\n  \"dataModel\": \"V_2_0\",\n  \"id\": \"<string>\",\n  \"jsonSchema\": \"<string>\",\n  \"jsonSchemaUrl\": \"<string>\",\n  \"mappings\": [\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"configuration\": {\n        \"addca\": {}\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"configuration\": {\n        \"incididunt_a1f\": {}\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"validity\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "query Credential Definitions",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/credentialdefinitions/query",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"credentialdefinitions",
										"query"
									]
								},
								"description": "Gets all credential definitions for a certain query."
							},
							"response": [
								{
									"name": "A list of credentials definitions.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions",
												"query"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"attestations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"credentialType\": \"<string>\",\n    \"dataModel\": \"V_1_1\",\n    \"id\": \"<string>\",\n    \"jsonSchema\": \"<string>\",\n    \"jsonSchemaUrl\": \"<string>\",\n    \"mappings\": [\n      {\n        \"input\": \"<string>\",\n        \"output\": \"<string>\",\n        \"required\": \"<boolean>\"\n      },\n      {\n        \"input\": \"<string>\",\n        \"output\": \"<string>\",\n        \"required\": \"<boolean>\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"configuration\": {\n          \"in_85a\": {},\n          \"dolor310\": {},\n          \"incididunt_b\": {}\n        },\n        \"type\": \"<string>\"\n      },\n      {\n        \"configuration\": {\n          \"eud_\": {},\n          \"dolor777\": {},\n          \"Utb\": {}\n        },\n        \"type\": \"<string>\"\n      }\n    ],\n    \"validity\": \"<long>\"\n  },\n  {\n    \"attestations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"credentialType\": \"<string>\",\n    \"dataModel\": \"V_2_0\",\n    \"id\": \"<string>\",\n    \"jsonSchema\": \"<string>\",\n    \"jsonSchemaUrl\": \"<string>\",\n    \"mappings\": [\n      {\n        \"input\": \"<string>\",\n        \"output\": \"<string>\",\n        \"required\": \"<boolean>\"\n      },\n      {\n        \"input\": \"<string>\",\n        \"output\": \"<string>\",\n        \"required\": \"<boolean>\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"configuration\": {\n          \"laborum7\": {},\n          \"voluptate726\": {}\n        },\n        \"type\": \"<string>\"\n      },\n      {\n        \"configuration\": {\n          \"amet_27c\": {},\n          \"voluptate8\": {}\n        },\n        \"type\": \"<string>\"\n      }\n    ],\n    \"validity\": \"<long>\"\n  }\n]"
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions",
												"query"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions",
												"query"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "get by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/credentialdefinitions/:credentialDefinitionId",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"credentialdefinitions",
										":credentialDefinitionId"
									],
									"variable": [
										{
											"key": "credentialDefinitionId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Gets a credential definition by its ID."
							},
							"response": [
								{
									"name": "The credential definition was found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions/:credentialDefinitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions",
												":credentialDefinitionId"
											],
											"variable": [
												{
													"key": "credentialDefinitionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credentialType\": \"<string>\",\n  \"dataModel\": \"V_2_0\",\n  \"id\": \"<string>\",\n  \"jsonSchema\": \"<string>\",\n  \"jsonSchemaUrl\": \"<string>\",\n  \"mappings\": [\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"configuration\": {\n        \"addca\": {}\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"configuration\": {\n        \"incididunt_a1f\": {}\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"validity\": \"<long>\"\n}"
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions/:credentialDefinitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions",
												":credentialDefinitionId"
											],
											"variable": [
												{
													"key": "credentialDefinitionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions/:credentialDefinitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions",
												":credentialDefinitionId"
											],
											"variable": [
												{
													"key": "credentialDefinitionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The credential definition was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions/:credentialDefinitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions",
												":credentialDefinitionId"
											],
											"variable": [
												{
													"key": "credentialDefinitionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "update Credential Definition",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credentialType\": \"<string>\",\n  \"dataModel\": \"V_2_0\",\n  \"id\": \"<string>\",\n  \"jsonSchema\": \"<string>\",\n  \"jsonSchemaUrl\": \"<string>\",\n  \"mappings\": [\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"configuration\": {\n        \"addca\": {}\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"configuration\": {\n        \"incididunt_a1f\": {}\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"validity\": \"<long>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/credentialdefinitions",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"credentialdefinitions"
									]
								},
								"description": "Updates credential definition."
							},
							"response": [
								{
									"name": "The credential definition was updated successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credentialType\": \"<string>\",\n  \"dataModel\": \"V_2_0\",\n  \"id\": \"<string>\",\n  \"jsonSchema\": \"<string>\",\n  \"jsonSchemaUrl\": \"<string>\",\n  \"mappings\": [\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"configuration\": {\n        \"addca\": {}\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"configuration\": {\n        \"incididunt_a1f\": {}\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"validity\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credentialType\": \"<string>\",\n  \"dataModel\": \"V_2_0\",\n  \"id\": \"<string>\",\n  \"jsonSchema\": \"<string>\",\n  \"jsonSchemaUrl\": \"<string>\",\n  \"mappings\": [\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"configuration\": {\n        \"addca\": {}\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"configuration\": {\n        \"incididunt_a1f\": {}\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"validity\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credentialType\": \"<string>\",\n  \"dataModel\": \"V_2_0\",\n  \"id\": \"<string>\",\n  \"jsonSchema\": \"<string>\",\n  \"jsonSchemaUrl\": \"<string>\",\n  \"mappings\": [\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"configuration\": {\n        \"addca\": {}\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"configuration\": {\n        \"incididunt_a1f\": {}\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"validity\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Can't update the credential definition because it was not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credentialType\": \"<string>\",\n  \"dataModel\": \"V_2_0\",\n  \"id\": \"<string>\",\n  \"jsonSchema\": \"<string>\",\n  \"jsonSchemaUrl\": \"<string>\",\n  \"mappings\": [\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"configuration\": {\n        \"addca\": {}\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"configuration\": {\n        \"incididunt_a1f\": {}\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"validity\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "delete Credential Definition By Id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/credentialdefinitions/:credentialDefinitionId",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"credentialdefinitions",
										":credentialDefinitionId"
									],
									"variable": [
										{
											"key": "credentialDefinitionId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Deletes a credential definition by its ID."
							},
							"response": [
								{
									"name": "The credential definition was deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions/:credentialDefinitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions",
												":credentialDefinitionId"
											],
											"variable": [
												{
													"key": "credentialDefinitionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credentialType\": \"<string>\",\n  \"dataModel\": \"V_2_0\",\n  \"id\": \"<string>\",\n  \"jsonSchema\": \"<string>\",\n  \"jsonSchemaUrl\": \"<string>\",\n  \"mappings\": [\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"input\": \"<string>\",\n      \"output\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"configuration\": {\n        \"addca\": {}\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"configuration\": {\n        \"incididunt_a1f\": {}\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"validity\": \"<long>\"\n}"
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions/:credentialDefinitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions",
												":credentialDefinitionId"
											],
											"variable": [
												{
													"key": "credentialDefinitionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions/:credentialDefinitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions",
												":credentialDefinitionId"
											],
											"variable": [
												{
													"key": "credentialDefinitionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The credential definition was not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentialdefinitions/:credentialDefinitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentialdefinitions",
												":credentialDefinitionId"
											],
											"variable": [
												{
													"key": "credentialDefinitionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Credentials",
					"item": [
						{
							"name": "query Credentials",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/credentials/query",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"credentials",
										"query"
									]
								},
								"description": "Query credentials, possibly across multiple participants."
							},
							"response": [
								{
									"name": "A list of verifiable credential metadata. Note that these are not actual VerifiableCredentials.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												"query"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"credential\": {\n      \"credentialSchema\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"credentialStatus\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"credentialSubject\": [\n        {\n          \"id\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\"\n        }\n      ],\n      \"dataModelVersion\": \"V_2_0\",\n      \"description\": \"<string>\",\n      \"expirationDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"issuanceDate\": \"<dateTime>\",\n      \"issuer\": {\n        \"additionalProperties\": {\n          \"ex_991\": {}\n        },\n        \"id\": \"<string>\"\n      },\n      \"name\": \"<string>\",\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"format\": \"JSON_LD\"\n  },\n  {\n    \"credential\": {\n      \"credentialSchema\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"credentialStatus\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"credentialSubject\": [\n        {\n          \"id\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\"\n        }\n      ],\n      \"dataModelVersion\": \"V_1_1\",\n      \"description\": \"<string>\",\n      \"expirationDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"issuanceDate\": \"<dateTime>\",\n      \"issuer\": {\n        \"additionalProperties\": {\n          \"enima7\": {},\n          \"ad_a5\": {},\n          \"ipsum_65\": {}\n        },\n        \"id\": \"<string>\"\n      },\n      \"name\": \"<string>\",\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"format\": \"JWT\"\n  }\n]"
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												"query"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												"query"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "resume Credential",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/credentials/:credentialId/resume",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"credentials",
										":credentialId",
										"resume"
									],
									"variable": [
										{
											"key": "credentialId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Resumes a credential with the given ID for the given participant. Resumed credentials will be removed from the Revocation List."
							},
							"response": [
								{
									"name": "The credential was resumed successfully. Check the Revocation List credential to confirm.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/resume",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"resume"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/resume",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"resume"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/resume",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"resume"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The credential or the participant was not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/resume",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"resume"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "revoke Credential",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/credentials/:credentialId/revoke",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"credentials",
										":credentialId",
										"revoke"
									],
									"variable": [
										{
											"key": "credentialId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Revokes a credential with the given ID for the given participant. Revoked credentials will be added to the Revocation List"
							},
							"response": [
								{
									"name": "The credential was revoked successfully. Check the Revocation List credential to confirm.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"revoke"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"revoke"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"revoke"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The credential or the participant was not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"revoke"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "check Credential Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/credentials/:credentialId/status",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"credentials",
										":credentialId",
										"status"
									],
									"variable": [
										{
											"key": "credentialId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Checks the revocation status of a credential with the given ID for the given participant."
							},
							"response": [
								{
									"name": "The credential status.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"status"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"status"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"status"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The credential or the participant was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"status"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "suspend Credential",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/credentials/:credentialId/suspend",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"credentials",
										":credentialId",
										"suspend"
									],
									"variable": [
										{
											"key": "credentialId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Suspends a credential with the given ID for the given participant. Suspended credentials will be added to the Revocation List. Suspension is reversible."
							},
							"response": [
								{
									"name": "The credential was suspended successfully. Check the Revocation List credential to confirm.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/suspend",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"suspend"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/suspend",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"suspend"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/suspend",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"suspend"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The credential or the participant was not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:credentialId/suspend",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":credentialId",
												"suspend"
											],
											"variable": [
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "get Credentials",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/credentials/{{PARTICIPANT_ID}}",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"credentials",
										"{{PARTICIPANT_ID}}"
									]
								},
								"description": "Gets all credentials for a certain participant."
							},
							"response": [
								{
									"name": "A list of verifiable credential metadata. Note that these are not actual VerifiableCredentials.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":participantId"
											],
											"variable": [
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"credential\": {\n      \"credentialSchema\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"credentialStatus\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"credentialSubject\": [\n        {\n          \"id\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\"\n        }\n      ],\n      \"dataModelVersion\": \"V_2_0\",\n      \"description\": \"<string>\",\n      \"expirationDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"issuanceDate\": \"<dateTime>\",\n      \"issuer\": {\n        \"additionalProperties\": {\n          \"ex_991\": {}\n        },\n        \"id\": \"<string>\"\n      },\n      \"name\": \"<string>\",\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"format\": \"JSON_LD\"\n  },\n  {\n    \"credential\": {\n      \"credentialSchema\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"credentialStatus\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"credentialSubject\": [\n        {\n          \"id\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\"\n        }\n      ],\n      \"dataModelVersion\": \"V_1_1\",\n      \"description\": \"<string>\",\n      \"expirationDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"issuanceDate\": \"<dateTime>\",\n      \"issuer\": {\n        \"additionalProperties\": {\n          \"enima7\": {},\n          \"ad_a5\": {},\n          \"ipsum_65\": {}\n        },\n        \"id\": \"<string>\"\n      },\n      \"name\": \"<string>\",\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"format\": \"JWT\"\n  }\n]"
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":participantId"
											],
											"variable": [
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":participantId"
											],
											"variable": [
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The participant was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/credentials/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"credentials",
												":participantId"
											],
											"variable": [
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Participants",
					"item": [
						{
							"name": "update Participant",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"did\": \"<string>\",\n  \"participantId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/participants",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"participants"
									]
								},
								"description": "Updates participant data."
							},
							"response": [
								{
									"name": "The participant was updated successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"did\": \"<string>\",\n  \"participantId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"did\": \"<string>\",\n  \"participantId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"did\": \"<string>\",\n  \"participantId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Can't update the participant because it was not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"did\": \"<string>\",\n  \"participantId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "Create Participant",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"did\": \"did:web:test\",\n  \"participantId\": \"did:web:test\",\n  \"name\": \"Test Participant\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/participants",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"participants"
									]
								},
								"description": "Adds a new participant."
							},
							"response": [
								{
									"name": "The participant was added successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"did\": \"<string>\",\n  \"participantId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"did\": \"<string>\",\n  \"participantId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"did\": \"<string>\",\n  \"participantId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Can't add the participant, because a object with the same ID already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"did\": \"<string>\",\n  \"participantId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "query Participants",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/participants/query",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"participants",
										"query"
									]
								},
								"description": "Gets all participants for a certain query."
							},
							"response": [
								{
									"name": "A list of participant metadata.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants",
												"query"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"did\": \"<string>\",\n    \"participantId\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"did\": \"<string>\",\n    \"participantId\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants",
												"query"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants",
												"query"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The participant was not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filterExpression\": [\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    },\n    {\n      \"operandLeft\": {},\n      \"operandRight\": {},\n      \"operator\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"sortField\": \"<string>\",\n  \"sortOrder\": \"DESC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants",
												"query"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "get Participant By Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{ISSUER_BASE_URL}}/api/admin/v1alpha/participants/:participantId",
									"host": [
										"{{ISSUER_BASE_URL}}"
									],
									"path": [
										"api",
										"admin",
										"v1alpha",
										"participants",
										":participantId"
									],
									"variable": [
										{
											"key": "participantId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Gets metadata for a certain participant."
							},
							"response": [
								{
									"name": "A list of verifiable credential metadata. Note that these are not actual VerifiableCredentials.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attestations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"did\": \"<string>\",\n  \"participantId\": \"<string>\",\n  \"participantName\": \"<string>\"\n}"
								},
								{
									"name": "Request body was malformed, or the request could not be processed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The request could not be completed, because either the authentication was missing or was not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "The participant was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1alpha/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1alpha",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"invalidValue\": {},\n    \"message\": \"<string>\",\n    \"path\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "value",
						"value": "c3VwZXItdXNlcg==.c3VwZXItc2VjcmV0LWtleQo=",
						"type": "string"
					},
					{
						"key": "key",
						"value": "x-api-key",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "password",
				"type": "string"
			},
			{
				"key": "key",
				"value": "x-api-key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "POLICY_ID_ASSET_1",
			"value": ""
		},
		{
			"key": "CONTRACT_AGREEMENT_ID",
			"value": ""
		},
		{
			"key": "AUTHORIZATION",
			"value": ""
		},
		{
			"key": "REFRESH_TOKEN",
			"value": ""
		},
		{
			"key": "REFRESH_AUD",
			"value": ""
		},
		{
			"key": "DATA_ENDPOINT",
			"value": ""
		},
		{
			"key": "TRANSFER_PROCESS_ID",
			"value": ""
		},
		{
			"key": "REFRESH_ENDPOINT",
			"value": ""
		},
		{
			"key": "PARTICIPANT_ID",
			"value": "c3VwZXItdXNlcg==",
			"type": "default"
		},
		{
			"key": "IH_URL",
			"value": "",
			"type": "default"
		},
		{
			"key": "IH_API_TOKEN",
			"value": "",
			"type": "default"
		},
		{
			"key": "DID",
			"value": "did:web:super-user",
			"type": "default"
		},
		{
			"key": "ISSUER_BASE_URL",
			"value": "http://127.0.0.1/issuer/ad",
			"type": "default"
		},
		{
			"key": "PARTICIPANT_ID_BASE64",
			"value": "cGFydGljaXBhbnQtYm9i",
			"type": "default"
		},
		{
			"key": "ISSUER_DID",
			"value": "did:web:dataspace-issuer-service%3A10016:issuer",
			"type": "default"
		},
		{
			"key": "REQUEST_ID",
			"value": ""
		}
	]
}