{
	"info": {
		"_postman_id": "a54859c5-2eb4-4ed3-b87c-7d54a50a5996",
		"name": "tractusx-edc-mgmt-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "34215553"
	},
	"item": [
		{
			"name": "Create Business Partner Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204 No Content (if new BPN) or 409 Conflict (if BPN already exists)\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 204, 409])",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"tx\": \"https://w3id.org/tractusx/v0.0.1/ns/\"\n  },\n  \"@id\": \"{{POLICY_BPN}}\",\n  \"tx:groups\": [\n    \"{{BUSINESS_PARTNER_GROUP}}\"\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{PROVIDER_MANAGEMENT_URL}}/business-partner-groups"
			},
			"response": []
		},
		{
			"name": "Get Business Partner Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{PROVIDER_MANAGEMENT_URL}}/business-partner-groups/{{POLICY_BPN}}"
			},
			"response": []
		},
		{
			"name": "Get BPN Mapping",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": "localhost/bdrs/api/bpn-directory"
			},
			"response": []
		},
		{
			"name": "Create Asset",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"@context\": {},\n    \"@id\": \"{{ASSET_ID}}\", \n    \"properties\": {\n        \"description\": \"Product EDC Demo Asset\"\n    },\n    \"dataAddress\": {\n        \"@type\": \"DataAddress\",\n        \"type\": \"HttpData\",\n        \"baseUrl\": \"https://jsonplaceholder.typicode.com/todos\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{PROVIDER_MANAGEMENT_URL}}/v3/assets"
			},
			"response": []
		},
		{
			"name": "Get all Assets",
			"request": {
				"method": "POST",
				"header": [],
				"url": "{{PROVIDER_MANAGEMENT_URL}}/v3/assets/request"
			},
			"response": []
		},
		{
			"name": "Get Asset by ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{PROVIDER_MANAGEMENT_URL}}/v3/assets/{{ASSET_ID}}"
			},
			"response": []
		},
		{
			"name": "Delete Asset by ID",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "{{PROVIDER_MANAGEMENT_URL}}/v3/assets/{{ASSET_ID}}"
			},
			"response": []
		},
		{
			"name": "Create Policy",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"@context\": {\n        \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n    },\n    \"@type\": \"PolicyDefinitionRequestDto\",\n    \"@id\": \"{{POLICY_ID}}\",\n    \"policy\": {\n\t\t\"@type\": \"odrl:Set\",\n\t\t\"odrl:permission\" : [{\n\t\t\t\"odrl:action\" : \"USE\",\n\t\t\t\"odrl:constraint\" : {\n\t\t\t\t\"@type\": \"LogicalConstraint\",\n\t\t\t\t\"odrl:or\" : [{\n\t\t\t\t\t\"@type\" : \"Constraint\",\n\t\t\t\t\t\"odrl:leftOperand\" : \"{{TX_NAMESPACE}}BusinessPartnerGroup\",\n\t\t\t\t\t\"odrl:operator\" : {\n                        \"@id\": \"odrl:eq\"\n                    },\n\t\t\t\t\t\"odrl:rightOperand\" : \"{{BUSINESS_PARTNER_GROUP}}\"\n\t\t\t\t}]\n\t\t\t}\n\t\t}]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{PROVIDER_MANAGEMENT_URL}}/v2/policydefinitions"
			},
			"response": []
		},
		{
			"name": "Get Policy by ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{PROVIDER_MANAGEMENT_URL}}/v2/policydefinitions/{{POLICY_ID}}"
			},
			"response": []
		},
		{
			"name": "Get all Policies",
			"request": {
				"method": "POST",
				"header": [],
				"url": "{{PROVIDER_MANAGEMENT_URL}}/v2/policydefinitions/request"
			},
			"response": []
		},
		{
			"name": "Delete Policy by ID",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "{{PROVIDER_MANAGEMENT_URL}}/v2/policydefinitions/{{POLICY_ID}}"
			},
			"response": []
		},
		{
			"name": "Create Contract Definitiion",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"@context\": {},\n    \"@id\": \"{{CONTRACT_DEFINITION_ID}}\",\n    \"@type\": \"ContractDefinition\",\n    \"accessPolicyId\": \"{{ACCESS_POLICY_ID}}\",\n    \"contractPolicyId\": \"{{CONTRACT_POLICY_ID}}\",\n    \"assetsSelector\" : {\n        \"@type\" : \"CriterionDto\",\n        \"operandLeft\": \"{{EDC_NAMESPACE}}id\",\n        \"operator\": \"=\",\n        \"operandRight\": \"{{ASSET_ID}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{PROVIDER_MANAGEMENT_URL}}/v2/contractdefinitions"
			},
			"response": []
		},
		{
			"name": "Get Contract Definition by ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{PROVIDER_MANAGEMENT_URL}}/v2/contractdefinitions/{{CONTRACT_DEFINITION_ID}}"
			},
			"response": []
		},
		{
			"name": "Get all Contract Definitiions",
			"request": {
				"method": "POST",
				"header": [],
				"url": "{{PROVIDER_MANAGEMENT_URL}}/v2/contractdefinitions/request"
			},
			"response": []
		},
		{
			"name": "Delete Contract Definition",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "{{PROVIDER_MANAGEMENT_URL}}/v2/contractdefinitions/{{CONTRACT_DEFINITION_ID}}"
			},
			"response": []
		},
		{
			"name": "Query Catalog",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Query Catalog should contain asset\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var dataset = jsonData['dcat:dataset'];\r",
							"    var offer = dataset.find(data => data['@id'] == pm.collectionVariables.get('ASSET_ID'));\r",
							"    if(offer) {\r",
							"      pm.collectionVariables.set(\"OFFER_ID\", offer['odrl:hasPolicy']['@id']);\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"@context\": {\r\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n  },\r\n  \"@type\": \"CatalogRequest\",\r\n  \"counterPartyAddress\": \"{{PROVIDER_PROTOCOL_URL}}\",\r\n  \"counterPartyId\": \"{{PROVIDER_ID}}\",\r\n  \"protocol\": \"dataspace-protocol-http\",\r\n  \"querySpec\": {\r\n    \"offset\": 0,\r\n    \"limit\": 50\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{CONSUMER_MANAGEMENT_URL}}/v2/catalog/request"
			},
			"response": []
		},
		{
			"name": "Initiate Negotation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"NEGOTIATION_ID\", jsonData['@id']);",
							"",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"@context\": {\n\t\t\"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n\t},\n\t\"@type\": \"NegotiationInitiateRequestDto\",\n\t\"counterPartyAddress\": \"{{PROVIDER_PROTOCOL_URL}}\",\n\t\"protocol\": \"dataspace-protocol-http\",\n\t\"policy\": {\n\t\t\"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n\t\t\"@type\": \"odrl:Offer\",\n\t\t\"@id\": \"{{OFFER_ID}}\",\n         \"assigner\": \"{{PROVIDER_ID}}\",\n\t\t\"permission\": {\n\t\t\t\"odrl:target\": \"{{ASSET_ID}}\",\n\t\t\t\"odrl:action\": {\n\t\t\t\t\"odrl:type\": \"USE\"\n\t\t\t},\n\t\t\t\"odrl:constraint\": {\n\t\t\t\t\"odrl:or\": {\n\t\t\t\t\t\"odrl:leftOperand\": \"{{TX_NAMESPACE}}BusinessPartnerGroup\",\n\t\t\t\t\t\"odrl:operator\": {\n\t\t\t\t\t\t\"@id\": \"odrl:eq\"\n\t\t\t\t\t},\n\t\t\t\t\t\"odrl:rightOperand\": \"{{BUSINESS_PARTNER_GROUP}}\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"prohibition\": [],\n\t\t\"obligation\": [],\n\t\t\"target\": \"{{ASSET_ID}}\"\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{CONSUMER_MANAGEMENT_URL}}/v2/contractnegotiations"
			},
			"response": []
		},
		{
			"name": "Get Negotation By ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Negotiation State should be FINALIZED\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.state).to.equal(\"FINALIZED\");\r",
							"    pm.collectionVariables.set(\"AGREEMENT_ID\", jsonData['contractAgreementId']);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{CONSUMER_MANAGEMENT_URL}}/v2/contractnegotiations/{{NEGOTIATION_ID}}"
			},
			"response": []
		},
		{
			"name": "Get all Negotations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": "{{CONSUMER_MANAGEMENT_URL}}/v2/contractnegotiations/request"
			},
			"response": []
		},
		{
			"name": "Cancel Negotation by ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": "{{CONSUMER_MANAGEMENT_URL}}/v2/contractnegotiations/7cff6ecb-7e5e-40b8-b101-eba3f2045b1f/cancel"
			},
			"response": []
		},
		{
			"name": "Initiate Transfer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"TRANSFER_PROCESS_ID\", jsonData['@id']);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"https://w3id.org/edc/v0.0.1/ns/TransferRequest\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"counterPartyAddress\": \"{{PROVIDER_PROTOCOL_URL}}\",\n  \"contractId\": \"{{NEGOTIATION_ID}}\",\n  \"assetId\": \"{{ASSET_ID}}\",\n  \"transferType\": \"application/octet-stream\",\n  \"dataDestination\":  {\n        \"type\": \"HttpProxy\"\n  },\n  \"privateProperties\": {\n     \"receiverHttpEndpoint\": \"{{BACKEND_SERVICE}}\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{CONSUMER_MANAGEMENT_URL}}/v2/transferprocesses"
			},
			"response": []
		},
		{
			"name": "Get Transfer by ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{CONSUMER_MANAGEMENT_URL}}/v2/transferprocesses/{{TRANSFER_PROCESS_ID}}"
			},
			"response": []
		},
		{
			"name": "Get all Transfers",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{CONSUMER_MANAGEMENT_URL}}/v2/transferprocesses/request"
			},
			"response": []
		},
		{
			"name": "Initiate EDR Negotation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n  },\n  \"@type\": \"NegotiationInitiateRequestDto\",\n  \"counterPartyAddress\": \"{{PROVIDER_PROTOCOL_URL}}\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"counterPartyId\": \"{{PROVIDER_ID}}\",\n  \"providerId\": \"{{PROVIDER_ID}}\",\n  \"offer\": {\n    \"offerId\": \"{{OFFER_ID}}\",\n    \"assetId\": \"{{ASSET_ID}}\",\n    \"policy\": {\n      \"@type\": \"odrl:Set\",\n      \"odrl:permission\": {\n        \"odrl:target\": \"{{ASSET_ID}}\",\n        \"odrl:action\": {\n          \"odrl:type\": \"USE\"\n        },\n        \"odrl:constraint\": {\n          \"odrl:or\": {\n            \"odrl:leftOperand\": \"{{TX_NAMESPACE}}BusinessPartnerGroup\",\n            \"odrl:operator\": {\n              \"@id\": \"odrl:eq\"\n            },\n            \"odrl:rightOperand\": \"{{BUSINESS_PARTNER_GROUP}}\"\n          }\n        }\n      },\n      \"odrl:prohibition\": [],\n      \"odrl:obligation\": [],\n      \"odrl:target\": \"{{ASSET_ID}}\"\n    }\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{CONSUMER_MANAGEMENT_URL}}/edrs"
			},
			"response": []
		},
		{
			"name": "Query EDRs Cached",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    var jsonData = pm.response.json();",
							"    var edr = jsonData.find(edr => edr['assetId'] == pm.collectionVariables.get('ASSET_ID'));",
							"    if (edr) {",
							"      pm.collectionVariables.set(\"EDR_TRANSFER_PROCESS_ID\", edr['transferProcessId']);",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{CONSUMER_MANAGEMENT_URL}}/edrs?assetId={{ASSET_ID}}",
					"host": [
						"{{CONSUMER_MANAGEMENT_URL}}"
					],
					"path": [
						"edrs"
					],
					"query": [
						{
							"key": "assetId",
							"value": "{{ASSET_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get EDR by tp ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"EDR_AUTH_CODE\", jsonData['authCode']);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{CONSUMER_MANAGEMENT_URL}}/edrs/{{EDR_TRANSFER_PROCESS_ID}}"
			},
			"response": []
		},
		{
			"name": "Del EDR by tp ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{CONSUMER_MANAGEMENT_URL}}/edrs/{{EDR_TRANSFER_PROCESS_ID}}"
			},
			"response": []
		},
		{
			"name": "Get Data with proxy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetId\": \"{{ASSET_ID}}\",\n    \"providerId\": \"{{PROVIDER_ID}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{CONSUMER_PROXY_URL}}/aas/request"
			},
			"response": []
		},
		{
			"name": "Get Data with proxy  (PathSegments)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetId\": \"{{ASSET_ID}}\",\n    \"providerId\": \"{{PROVIDER_ID}}\",\n    \"pathSegments\": \"/1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{CONSUMER_PROXY_URL}}/aas/request"
			},
			"response": []
		},
		{
			"name": "Get Data with provider dataplane",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"NEGOTIATION_ID\", jsonData.id);",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{EDR_AUTH_CODE}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{PROVIDER_PUBLIC_URL}}"
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": {
			"value": "password",
			"key": "X-Api-Key"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "CONSUMER_MANAGEMENT_URL",
			"value": "http://localhost/bob/management"
		},
		{
			"key": "PROVIDER_PROTOCOL_URL",
			"value": "http://alice-controlplane:8084/api/v1/dsp"
		},
		{
			"key": "PROVIDER_MANAGEMENT_URL",
			"value": "http://localhost/alice/management"
		},
		{
			"key": "ASSET_ID",
			"value": "1",
			"type": "default"
		},
		{
			"key": "POLICY_ID",
			"value": "1",
			"type": "default"
		},
		{
			"key": "CONTRACT_POLICY_ID",
			"value": "1",
			"type": "default"
		},
		{
			"key": "ACCESS_POLICY_ID",
			"value": "1",
			"type": "default"
		},
		{
			"key": "CONTRACT_DEFINITION_ID",
			"value": "1",
			"type": "default"
		},
		{
			"key": "POLICY_BPN",
			"value": "BPNL000000000002",
			"type": "default"
		},
		{
			"key": "OFFER_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "NEGOTIATION_ID",
			"value": ""
		},
		{
			"key": "AGREEMENT_ID",
			"value": ""
		},
		{
			"key": "TRANSFER_PROCESS_ID",
			"value": ""
		},
		{
			"key": "EDR_TRANSFER_PROCESS_ID",
			"value": ""
		},
		{
			"key": "EDR_AUTH_CODE",
			"value": ""
		},
		{
			"key": "BACKEND_SERVICE",
			"value": "http://backend:8080",
			"type": "string"
		},
		{
			"key": "PROVIDER_ID",
			"value": "BPNL000000000001",
			"type": "string"
		},
		{
			"key": "EDC_NAMESPACE",
			"value": "https://w3id.org/edc/v0.0.1/ns/",
			"type": "string"
		},
		{
			"key": "TX_NAMESPACE",
			"value": "https://w3id.org/tractusx/v0.0.1/ns/",
			"type": "string"
		},
		{
			"key": "CONSUMER_PROXY_URL",
			"value": "http://localhost/bob/proxy",
			"type": "string"
		},
		{
			"key": "PROVIDER_PUBLIC_URL",
			"value": "http://localhost/alice/api/public",
			"type": "string"
		},
		{
			"key": "BUSINESS_PARTNER_GROUP",
			"value": "gold-partners",
			"type": "string"
		}
	]
}